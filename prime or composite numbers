
def is_prime(number):
    """ Function to check if a number is prime """
    if number <= 1:
        return False
    if number == 2:
        return True  # 2 is a prime number
    if number % 2 == 0:
        return False  # Even numbers greater than 2 are not prime
    
    # Check for odd factors from 3 up to the square root of the number
    for i in range(3, int(number**0.5) + 1, 2):
        if number % i == 0:
            return False
    
    return True

def count_prime_and_composite(numbers):
    prime_count = 0
    composite_count = 0
    
    for num in numbers:
        try:
            num = int(num)
            if num >= 2 and is_prime(num):
                prime_count += 1
            elif num > 1:
                composite_count += 1
        except ValueError:
            continue  # Ignore non-integer inputs
    
    return prime_count, composite_count

# Function to handle test cases
def handle_test_cases():
    test_cases = [
        "33, 41, 52, 61, 73, 90",
        "TEN, FIFTY, SIXTY-ONE, SEVENTY-SEVEN, NINE",
        "45, 87, 09, 5.0, 2.3, 0.4",
        "-54, -76, -97, -23, -33, -98",
        "45, 73, 00, 50, 67, 44"
    ]
    
    for idx, test_case in enumerate(test_cases, start=1):
        numbers = test_case.split(", ")
        prime_count, composite_count = count_prime_and_composite(numbers)
        print(f"Test Case {idx}:")
        print(f"Prime numbers: {prime_count}")
        print(f"Composite numbers: {composite_count}")
        print()

# Run the test cases
handle_test_cases()
